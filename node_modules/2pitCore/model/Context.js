const InstanceTable = require('2pitCore/model/Instance.js');

exports.create = function ( config, connector, fqdn ) {

  return new Promise ( ( resolve, reject ) => {
    var connection = connector();
    InstanceTable.get( connection, fqdn, 'fqdn' )
    .then( instance => {
      var result = {
        config: config,
        locale: instance.default_locale,
        roles: ["guest", "user"],
        place_id: instance.default_place_id, 
        instance: instance,
      };

      /**
       * Returns the current config if key is not given
       * If key is given:
       * - either this key belongs to the instance specification, in which case the method returns the corresponding value
       * - or it does not belong to the instance specification, in which case the method returns the value for this key in the config.
       */
      result['getConfig'] = function ( key = null ) {
        if ( key ) {
          if ( key in instance.specifications ) return instance.specifications.key;
          else if ( key in config ) return config.key;
          else return null;
        }
        else return config;
      };

      result['localize'] = function ( label, locale = null ) {
        if ( !label ) return '';
        if ( !locale ) locale = result.locale;
        if ( locale in label ) return label[locale];
        else return label.default;
      }
      
      resolve( result );
      connection.end( err => { if (err) throw err; } );
    })
    .catch( err => { reject( err ); });
  });
}

