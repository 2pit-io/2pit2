Constants = require('2pitCore/model/CONSTANTS');
const Sql = require('2pitCore/model/Sql');
const or = Sql.or;
const and = Sql.and;
const not = Sql.not;

exports.get = function (context, connection, key1, column1 = 'id', key2 = null, column2 = null, key3 = null, column3 = null, key4 = null, column4 = null, key5 = null, column5 = null)
{
  return new Promise ( (resolve, reject) => {
    let where = and().eq(column1, key1);
console.log(where.current());
    if (key2) where.eq(column2, key2);
    if (key3) where.eq(column3, key3);
    if (key4) where.eq(column4, key4);
    if (key5) where.eq(column5, key5);
    return Sql.select(context, connection, 'core_place', where)
    .then( row => { resolve(row[0]); })
    .catch( err => { reject(err); });
  });
}

exports.select = function (context, connection, where, { columns = null, order = null, joins = null } = {}) {
  
  // Restrict access to the current instance
  where = and(and().eq('instance_id', context.instance.id), where);

  return new Promise ( (resolve, reject) => {
    return Sql.select(context, connection, 'core_place', where, { columns: columns, order: order, joins: joins })
    .then( row => { resolve(row); })
    .catch( err => { reject(err); });
  });
}

