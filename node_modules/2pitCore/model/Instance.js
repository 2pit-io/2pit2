var DB_MANAGER = process.env.DB_MANAGER;
if (!DB_MANAGER) DB_MANAGER = '2pitUtilities/Mysql';
const Database = require(DB_MANAGER);
const Sql = require('2pitCore/model/Sql');
const or = Sql.or;
const and = Sql.and;
const not = Sql.not;

exports.get = function (connection, key1, column1 = 'id', key2, column2 = null, key3, column3 = null, key4, column4 = null, key5, column5 = null)
{
  return new Promise ( (resolve, reject) => {
    let where = and().eq(column1, key1);
    if (key2) where.eq(column2, key2);
    if (key3) where.eq(column3, key3);
    if (key4) where.eq(column4, key4);
    if (key5) where.eq(column5, key5);
    return Database.select(connection, 'core_instance', where)
    .then( row => { resolve(row[0]); })
    .catch( err => { reject(err); });
  });
}

exports.select = function (connection, where, { columns = null, order = null } = {}) 
{
  return new Promise ( (resolve, reject) => {
    return Database.select(connection, 'core_instance', where, { columns: columns, order: order })
    .then( row => { resolve(row); })
    .catch( err => { reject(err); });
  });
}
