const Sql = require('2pitCore/model/Sql');
const or = Sql.or;
const and = Sql.and;
const not = Sql.not;

/**
 Instanciate a new account of the given type
 */
exports.instanciate = function(context)
{
  return {
    "status": "new",
    "applications": [],
    "communities": [], // Deprecated
    "roles": [],
    "perimeters": [],
    "specifications": [],
    "locale": context.instance.default_locale,
    "photo_link_id": "no-photo.png"
  }
}

exports.get = function (context, connection, key1, column1 = 'id', key2 = null, column2 = null, key3 = null, column3 = null, key4 = null, column4 = null, key5 = null, column5 = null)
{
  return new Promise ( (resolve, reject) => {
    let where = and().eq(column1, key1);
    if (key2) where.eq(column2, key2);
    if (key3) where.eq(column3, key3);
    if (key4) where.eq(column4, key4);
    if (key5) where.eq(column5, key5);
    return Sql.select(context, connection, 'core_vcard', where)
    .then( row => { resolve(row[0]); })
    .catch( err => { reject(err); });
  });
}

exports.select = function (context, connection, where, { columns = null, order = null, joins = null } = {}) {

  return new Promise ( (resolve, reject) => {
    return Sql.select(context, connection, 'core_vcard', where, { columns: columns, order: order, joins: joins })
    .then( row => { resolve(row); })
    .catch( err => { reject(err); });
  });
}

